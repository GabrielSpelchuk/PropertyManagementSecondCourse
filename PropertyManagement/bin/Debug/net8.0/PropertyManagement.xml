<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PropertyManagement</name>
    </assembly>
    <members>
        <member name="M:PropertyManagement.Controllers.AuthController.Register(PropertyManagement.BLL.Dtos.Auth.RegisterDto)">
            <summary>
            Register a new user.
            </summary>
            <param name="dto">User registration data</param>
            <returns>201 Created if successful</returns>
            <response code="201">User created successfully</response>
            <response code="400">Invalid data</response>
        </member>
        <member name="M:PropertyManagement.Controllers.AuthController.ConfirmEmail(System.String,System.String)">
            <summary>
            Confirm user email.
            </summary>
            <param name="userId">User ID</param>
            <param name="token">Email confirmation token</param>
            <returns>200 OK if confirmed</returns>
        </member>
        <member name="M:PropertyManagement.Controllers.AuthController.Login(PropertyManagement.BLL.Dtos.Auth.LoginDto)">
            <summary>
            Log in an existing user.
            </summary>
            <param name="dto">Login credentials</param>
            <returns>Access and Refresh tokens</returns>
        </member>
        <member name="M:PropertyManagement.Controllers.AuthController.Refresh(PropertyManagement.BLL.Dtos.Auth.RefreshDto)">
            <summary>
            Refresh access token using refresh token.
            </summary>
            <param name="dto">Refresh token pair</param>
            <returns>New token pair</returns>
        </member>
        <member name="M:PropertyManagement.Controllers.AuthController.ForgotPassword(PropertyManagement.BLL.Dtos.Auth.ForgotPasswordDto)">
            <summary>
            Request password reset link.
            </summary>
            <param name="dto">User email</param>
            <returns>200 OK if found</returns>
        </member>
        <member name="M:PropertyManagement.Controllers.AuthController.ResetPassword(PropertyManagement.BLL.Dtos.Auth.ResetPasswordDto)">
            <summary>
            Reset user password.
            </summary>
            <param name="dto">Reset password data</param>
            <returns>200 OK if success</returns>
        </member>
        <member name="M:PropertyManagement.Controllers.AuthController.Me">
            <summary>
            Get authenticated user info.
            </summary>
            <returns>User info</returns>
        </member>
        <member name="M:PropertyManagement.Controllers.AuthController.Logout">
            <summary>
            Log out current user.
            </summary>
            <returns>200 OK</returns>
        </member>
        <member name="M:PropertyManagement.Controllers.PropertyController.Get(System.Int32)">
            <summary>
            Get a property by ID
            </summary>
            <param name="id">Property ID</param>
            <returns>Property details</returns>
            <response code="200">Return the property</response>
            <response code="404">If the property is not found</response>
        </member>
        <member name="M:PropertyManagement.Controllers.PropertyController.Create(PropertyManagement.BLL.Dtos.Property.PropertyCreateDto)">
            <summary>
            Create a new property
            </summary>
            <param name="dto">New property data</param>
            <returns>Created property</returns>
            <response code="201">Property created successfylly</response>
            <response code="400">Invalid input data</response>
        </member>
        <member name="M:PropertyManagement.Controllers.PropertyController.Update(System.Int32,PropertyManagement.BLL.Dtos.Property.PropertyUpdateDto)">
            <summary>
            Update a property
            </summary>
            <param name="id">ID of the property to update</param>
            <param name="dto">Updated data</param>
            <returns>No content</returns>
            <response code="204">Updated successful</response>
            <response code="404">Property not found</response>
            <response code="400">Invalid input</response>
        </member>
        <member name="M:PropertyManagement.Controllers.PropertyController.Delete(System.Int32)">
            <summary>
            Delete a property
            </summary>
            <param name="id">Id of the property</param>
            <returns>No content</returns>
            <response code="204">Delete successful</response>
            <response code="404">Property not found</response>
        </member>
        <member name="M:PropertyManagement.Controllers.PropertyController.Query(PropertyManagement.BLL.Validation.Property.PropertyQueryParameters)">
            <summary>
            Get filtered, sorted and paginated properties
            </summary>
            <param name="query"></param>
            <returns>Filtered, sorted, paginated properties</returns>
            <response code="200">Filtered, sorted, paginated successful</response>
            <response code="400">Invalid input</response>
        </member>
        <member name="M:PropertyManagement.Controllers.PropertyTypeController.Get(System.Int32)">
            <summary>
            Get a property type by ID
            </summary>
            <param name="id">Property type ID</param>
            <returns>Property type details</returns>
            <response code="200">Return the property type</response>
            <response code="404">If the property type is not found</response>
        </member>
        <member name="M:PropertyManagement.Controllers.PropertyTypeController.Create(PropertyManagement.BLL.Dtos.PropertyType.PropertyTypeCreateDto)">
            <summary>
            Create a new property type
            </summary>
            <param name="dto">New property type data</param>
            <returns>Created property type</returns>
            <response code="201">Property type created successfylly</response>
            <response code="400">Invalid input data</response>
        </member>
        <member name="M:PropertyManagement.Controllers.PropertyTypeController.Update(System.Int32,PropertyManagement.BLL.Dtos.PropertyType.PropertyTypeUpdateDto)">
            <summary>
            Update a property type
            </summary>
            <param name="id">ID of the property type to update</param>
            <param name="dto">Updated data</param>
            <returns>No content</returns>
            <response code="204">Updated successful</response>
            <response code="404">Property type not found</response>
            <response code="400">Invalid input</response>
        </member>
        <member name="M:PropertyManagement.Controllers.PropertyTypeController.Delete(System.Int32)">
            <summary>
            Delete a property type
            </summary>
            <param name="id">Id of the property type</param>
            <returns>No content</returns>
            <response code="204">Delete successful</response>
            <response code="404">Property type not found</response>
        </member>
        <member name="M:PropertyManagement.Controllers.PropertyTypeController.Query(PropertyManagement.BLL.Validation.PropertyType.PropertyTypeQueryParameters)">
            <summary>
            Get paginated property type
            </summary>
            <param name="query"></param>
            <returns>Paginated property types</returns>
            <response code="204">Paginated successful</response>
            <response code="400">Invalid input</response>
        </member>
        <member name="M:PropertyManagement.Controllers.UserController.Get(System.Int32)">
            <summary>
            Get a user by ID
            </summary>
            <param name="id">User ID</param>
            <returns>User details</returns>
            <response code="200">Return the user</response>
            <response code="404">If the user is not found</response>
        </member>
        <member name="M:PropertyManagement.Controllers.UserController.Create(PropertyManagement.BLL.Dtos.User.UserCreateDto)">
            <summary>
            Create a new user
            </summary>
            <param name="dto">New user data</param>
            <returns>Created user</returns>
            <response code="201">User created successfylly</response>
            <response code="400">Invalid input data</response>
        </member>
        <member name="M:PropertyManagement.Controllers.UserController.Update(System.Int32,PropertyManagement.BLL.Dtos.User.UserUpdateDto)">
            <summary>
            Update a user
            </summary>
            <param name="id">ID of the user to update</param>
            <param name="dto">Updated data</param>
            <returns>No content</returns>
            <response code="204">Updated successful</response>
            <response code="404">User not found</response>
            <response code="400">Invalid input</response>
        </member>
        <member name="M:PropertyManagement.Controllers.UserController.Delete(System.Int32)">
            <summary>
            Delete a user
            </summary>
            <param name="id">Id of the user</param>
            <returns>No content</returns>
            <response code="204">Delete successful</response>
            <response code="404">User not found</response>
        </member>
        <member name="M:PropertyManagement.Controllers.UserController.Query(PropertyManagement.BLL.Validation.User.UserQueryParameters)">
            <summary>
            Get paginated user
            </summary>
            <param name="query"></param>
            <returns>Paginated properties</returns>
            <response code="204">Paginated successful</response>
            <response code="400">Invalid input</response>
        </member>
        <member name="T:PropertyManagement.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:PropertyManagement.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:PropertyManagement.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:PropertyManagement.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:PropertyManagement.Migrations.InitialCreateWithMoreData">
            <inheritdoc />
        </member>
        <member name="M:PropertyManagement.Migrations.InitialCreateWithMoreData.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:PropertyManagement.Migrations.InitialCreateWithMoreData.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:PropertyManagement.Migrations.InitialCreateWithMoreData.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
